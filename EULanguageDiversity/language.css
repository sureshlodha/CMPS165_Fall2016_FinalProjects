.axis path,
.axis line {
    fill: none;
  
    shape-rendering: crispEdges;
    cursor: pointer;
}

.mesh {
    fill: none;
  		
    stroke-width: 1px;
    stroke-linejoin: round;
	}

.dot {
    stroke: #f0f0f0;
}

.xAxis{
    transform: translate(0px, 0px) rotate(90);
}


/* Tooltip container */
.tooltip {
    position: absolute;
    display: inline-block;
    width: auto;
    height: auto;
    font: bold 12px/30px Verdana, serif;
    border-radius: 3px;
    line-height: 20px;
    padding: 10px;
    pointer-events: none;
    color: rgb(255, 255, 255);
    background: rgb(113, 157, 171);
    text-shadow: rgba(0, 0, 0, 0.0980392) 1px 1px 1px;
    box-shadow: 0px 7px 14px 0px rgba(0,0,0,0.3);
}
 
.tooltip:after {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    border-width: ;
    border-style: ;
    border-color: transparent transparent transparent transparent;
    top: ;
    left: ;
}

.tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;
    position: absolute;
    z-index: 1;
}



.tooltip2 {
    position: relative;
    display: inline-block;
    width: auto;
    height: auto;
}

/* Tooltip text */
.tooltip2 .tooltiptext2 {
    visibility: hidden;
    width: 120px;
    background-color: #f0f0f0;
    color: #000;
    text-align: center;
    padding: 5px 0;
    border-radius: 2px;
    position: absolute;
    left: 0px;
    bottom: 55px;
    z-index: 1;
    box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.8);
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip2:hover .tooltiptext2 {
    visibility: visible;
}



svg {
    font: bold 14px/28px Verdana, serif;
    stroke: #000;
    display: block;
    margin-left: auto;
    float: right;
    position: fixed;
}


.key path {
    display: none;
}

.key line {
    stroke: #000;
    shape-rendering: crispEdges;
}

.county-border {
    fill: none;
    stroke: #f00;
    stroke-opacity: .3;
}

/*new code for button for switching between generations*/
.button {
    background-color: #4d4d4d;
    color: white;
    padding: 12px 26px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    cursor: pointer;
    float: left;
    outline: 0;
    margin-right: -3px;
    border: none;
    /*border-right-color: .5px solid white;
    border-left-color: .5px solid white; */
}
 
.button:hover {
    background-color: #333333;
}
.button:focus {
    background-color: #333333;
}

/*new code for button for drop down menu language change*/

.dropbtn {
    background-color: #4d4d4d;
    color: white;
    /*border-radius: 5px;*/
    padding: 12px 34px;
    text-align: center;
    display: inline-block; /**/
    font-size: 16px;
    cursor: pointer;
    outline: 0;
    margin-right: 0px;
    border: none;
}
 
.dropdown {
    position: relative;
    display: inline-block;
    cursor: pointer;
}
 
.dropdown-content {
    display: none;
    position: absolute;
    cursor: pointer;
    right: 0;
    background-color: #f0f0f0;
    min-width: 136.5px;
    box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.6);
}

.dropdown-content:focus {
    background-color: #333333;
}
 
.dropdown-content a {
    color: black;
    padding: 7px 10px;
    text-decoration: none;
    display: block;
    cursor: pointer;  
}
 
.dropdown-content a:focus {
    background-color: #A9A9A9
}
 
.dropdown-content a:hover {
    background-color: #A9A9A9
}
 
.dropdown:hover .dropdown-content {
    display: block;
    bottom:100%;
   
}
 
.dropdown:hover .dropbtn {
    background-color: #333333;
    bottom:100%;   
}









.title{
    position: absolute;
    font-family:inherit;
    box-shadow: 0px 5px 14px 0px rgba(0,0,0,0.4);
    /*width: 100px;
    height: 30px; */
}



/* tab info */

body,html {
font: 18px/1.5 sans-serif, serif;
background-color: lightcyan;
min-width: 1235px;
min-height: 1200px;
position: relative;
overflow: scroll;}

dt {
    font-weight: bold;
}

dl {
    margin-bottom: 50px;
}

#bug:target {
    outline: 4px solid #ccc;
}

/**
 * tab panel widget
 */
.tabPanel-widget {
    position: absolute;  /* containing block for headings (top:0) */
    background: #999;
    transform: translate(0px, 100px);
    box-shadow: 0px 5px 14px 0px rgba(0,0,0,0.3);
}

/**
 * because labels come first in source order - we use z-index to move them in front of the headings
 */
.tabPanel-widget > label {
    position: absolute;
    z-index: 1;
}

/**
 * labels and headings must share same values so grouping declarations in this rule prevents async edits (risk of breakage)
 * line-height == height -> vertical centering
 * the width dictates the offset for all headings but the first one: left offset = width * number of previous heading(s)
 * note that width and offset of label/heading pair can be customized if necessary
 */

.tabPanel-widget > label,
.tabPanel-widget > h2 {
    font-size: 1.1em;
    width: 9em;
    height: 2em;
    line-height: 2em;
    outline: 0;
}

/**
 * position:relative is for the markers (the down arrow in tabs)
 */
.tabPanel-widget > h2 {
    position: relative;
    margin: 0;
    text-align: center;
    background: #999;
    color: #fff;
}

.tabPanel-widget > label {
    border-right: 1px solid #fff;  
}

/**
 * all first level labels and headings after the very first ones 
 */
.tabPanel-widget input,
.tabPanel-widget > label ~ label,
.tabPanel-widget > h2 ~ h2 {
    position: absolute;
    top: 0;
}


/**
 * We target all the label/heading pairs
 * we increment the :nth-child() params by 4 as well as the left value (according to "tab" width)
 */

.tabPanel-widget label:nth-child(1),
.tabPanel-widget h2:nth-child(3) {
    left: 0em;
}

.tabPanel-widget label:nth-child(5),
.tabPanel-widget h2:nth-child(7) {
    left: 9em;
}

.tabPanel-widget label:nth-child(9),
.tabPanel-widget h2:nth-child(11) {
    left: 18em;
}

/**
 * we visually hide all the panels
 * https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
 */
.tabPanel-widget input + h2 + div {
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px);
    padding:0 !important;
    border:0 !important;
    height: 1px !important; 
    width: 1px !important; 
    overflow: hidden;
}
/**
 * we reveal a panel depending on which control is selected 
 */
.tabPanel-widget input:checked + h2 + div {
    position: static !important;
    padding: 1em !important;
    height: auto !important; 
    width: auto !important; 
}

/**
 * shows a hand cursor only to pointing device users
 */
.tabPanel-widget label:hover {
    cursor: pointer;
}

.tabPanel-widget > div {
    background: #f0f0f0;
    padding: 1em;
}

/**
 * we hide radio buttons and also remove them from the flow
 */
.tabPanel-widget input[name="tabs"] {
    opacity: 0;
    position: absolute;
}

/**
 * reset of the above within the tab panel (for pointing-device users)
 */
.tabPanel-widget:hover h2 {
    outline: none !important;
}

/**
 * visual cue of the selection
 */
.tabPanel-widget input[name="tabs"]:checked + h2 {
    background: #333;
}

/**
 * the marker for tabs (down arrow)
 */
.tabPanel-widget input[name="tabs"]:checked + h2:after {
    content: '';
    margin: auto;
    position: absolute;
    bottom: -10px;
    left: 0;
    right: 0;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #333;
}

/**
 * Make it plain/simple below 45em (stack everything)
 */
@media screen and (max-width: 45em) {
  
  /* hide unecessary label/control pairs */
    .tabPanel-widget label,
    .tabPanel-widget input[name="tabs"] {
    display: none;
}
  
  /* reveal all panels */
.tabPanel-widget > input + h2 + div {
    display: block !important;
    position: static !important;
    padding: 1em !important;
    height: auto !important; 
    width: auto !important; 
}
  
  /* "unstyle" the heading */
.tabPanel-widget h2 {
    width: auto;
    position: static !important;
    background: #999 !important;
}
  
  /* "kill" the marker */
  .tabPanel-widget h2:after {
    display: none !important;
}


}

#rightside{
            position: absolute;
            right: 0;
            width: 650px;
            height: 1000px;
        }